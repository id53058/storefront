name: Build, TypeScript, and Tests

# Trigger on pushes to main and all PRs
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

concurrency:
  group: tests-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint_and_typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get PNPM version from package.json
        id: pnpm-version
        run: echo "pnpm_version=$(cat package.json | jq '.engines.pnpm' | sed -E 's/[^0-9.]//g')" >> $GITHUB_OUTPUT

      - name: Install PNPM
        uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.pnpm-version.outputs.pnpm_version }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          PUBLIC_SALEOR_API_URL: https://store-qdjgu50o.eu.saleor.cloud/graphql/

      - name: Generate GraphQL types
        run: pnpm run generate
        env:
          PUBLIC_SALEOR_API_URL: https://store-qdjgu50o.eu.saleor.cloud/graphql/

      - name: Type check
        run: pnpm run check

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: lint_and_typecheck
    steps:
      - uses: actions/checkout@v4

      - name: Get PNPM version from package.json
        id: pnpm-version
        run: echo "pnpm_version=$(cat package.json | jq '.engines.pnpm' | sed -E 's/[^0-9.]//g')" >> $GITHUB_OUTPUT

      - name: Install PNPM
        uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.pnpm-version.outputs.pnpm_version }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          PUBLIC_SALEOR_API_URL: https://store-qdjgu50o.eu.saleor.cloud/graphql/

      - name: Build application
        run: pnpm run build
        env:
          PUBLIC_SALEOR_API_URL: https://store-qdjgu50o.eu.saleor.cloud/graphql/
          PUBLIC_STOREFRONT_URL: https://example.com

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            build/
            .svelte-kit/output/
          retention-days: 1

  test:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium]
    steps:
      - uses: actions/checkout@v4

      - name: Get PNPM version from package.json
        id: pnpm-version
        run: echo "pnpm_version=$(cat package.json | jq '.engines.pnpm' | sed -E 's/[^0-9.]//g')" >> $GITHUB_OUTPUT

      - name: Install PNPM
        uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.pnpm-version.outputs.pnpm_version }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          PUBLIC_SALEOR_API_URL: https://store-qdjgu50o.eu.saleor.cloud/graphql/

      - name: Install Playwright browsers
        run: pnpm exec playwright install ${{ matrix.browser }} --with-deps

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: .

      - name: Run Playwright tests
        run: pnpm exec playwright test --project="Desktop Chrome"
        env:
          PUBLIC_SALEOR_API_URL: https://store-qdjgu50o.eu.saleor.cloud/graphql/
          PUBLIC_STOREFRONT_URL: http://127.0.0.1:3002
          BASE_URL: http://127.0.0.1:3002
          CI: true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.browser }}
          path: |
            playwright-report/
            test-results/
          retention-days: 30

  docker_build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: saleor-storefront:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
